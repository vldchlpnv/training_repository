# Подводная лодка
# На носу подводной лодки закреплен гидроакустический датчик. Его задача измерять глубину дна в месте где находится лодка.
# Вывод датчика выглядит как набор чисел, который характеризует то как меняется глубина по мере движения лодки.
# Стартуем!
# Лодка начала движение куда-то вглубь с постоянно работающим датчиком.
# Например, у нас есть следующий отчет:
# ```
# 199
# 200
# 208
# 210
# 200
# 207
# 240
# 269
# 260
# 263
# ```
# Нам из этого отчета надо выяснить как изменяется рельеф дна.
# Чтобы понять это в простом варианте нужно посчитать количество раз когда между измерениями глубина увеличивается и сколько раз уменьшается.
# Для указанного отчета результат будет следующим:
# ```
# 199 (N/A - нет предыдущего измерения поэтому ничего нельзя сказать)
# 200 (увеличилась) # 1
# 208 (увеличилась) # 2
# 210 (увеличилась) # 3
# 
# 200 (уменьшилась) - 1
# 
# 207 (увеличилась) # 4
# 240 (увеличилась) # 5
# 269 (увеличилась) # 6
# 
# 260 (уменьшилась) - 2
# 
# 263 (увеличилась) # 7
# ```
# Для 7 измерений глубина увеличилась, а для 2 уменьшилась.
# Так как для 7 измерений глубина увеличивается и только лишь для 2 измерений дно уменьшается, то этого можно сделать вывод, что дно углубляется.
# 
# Потом принимаем решение, куда идет дно
# increases > decreases печатаем "Вниз"
# decreases > increases печатаем "Вверх"
# increases == decreases печатаем "Ровное"
# 
# Полезные ссылки
# https://docs.python.org/3/library/functions.html?highlight=built#print
# https://docs.python.org/3/tutorial/controlflow.html#for-statements

import random

# Сгенерируем случайные данные
# Выполни этот код, чтобы получить готовый список с данными датчика
depth_data = [1000] # Базовая глубина
coef1 = random.randint(-20, 0)
coef2 = random.randint(0, 20)
depth_data.extend(random.randint(coef1, coef2) for _ in range(1000))
for i, depth in enumerate(depth_data[1:], 1):
    depth_data[i] = depth_data[i-1] + depth
    
increases = 0
decreases = 0

# Твой код обработки данных и принятия решения по направлению дна
...